Version: 0.6.0

Changelog:

0.6.0 (March 13, 2025)

New features:
- Added Apple Silicon (M1/M2/M3) hardware acceleration support for Tortoise-TTS
- Implemented MPS (Metal Performance Shaders) backend for PyTorch on macOS
- Added automatic platform detection for optimal device selection (CUDA, MPS, or CPU)
- Created macOS-specific setup script for easy installation
- Enhanced CUDA detection and support for Windows and Linux with NVIDIA GPUs
- Added platform-specific setup scripts for Windows and Linux
- Implemented complete English user interface for improved accessibility
- Added option to select default voice gender (male/female) when not using voice cloning

Technical improvements:
- Added compatibility patches for Tortoise-TTS on MPS
- Implemented safe tensor operations with CPU fallback for unsupported MPS operations
- Added platform-specific requirements generation
- Enhanced performance on Apple Silicon Macs with 2-5x speedup compared to CPU
- Improved CUDA detection logic to properly identify and utilize NVIDIA GPUs on Windows and Linux
- Added CUDA fix scripts to ensure proper installation of CUDA-enabled PyTorch
- Implemented robust hardware detection for optimal performance across all platforms
- Fixed voice consistency issue to ensure the same voice is used across all segments when not using voice cloning
- Implemented consistent default voice seeds (42 for male, 24 for female) for predictable voice generation

0.5.2 (March 4, 2025)

Bug fixes:
- Fixed audio extraction for iPhone videos with apac codec
- Improved FFmpeg integration with increased analyzeduration and probesize parameters
- Enhanced error handling for various video formats
- Added fallback methods for audio extraction when primary method fails

Technical improvements:
- Implemented robust audio extraction for MOV, MP4 and other common formats
- Added verification step to ensure audio extraction success

0.5.1 (March 5, 2025)

Bug fixes:
- Fixed minor issues with language code handling
- Improved error handling for file permissions
- Enhanced stability of the translation process
- Updated dependencies for better compatibility

0.5.0 (March 3, 2025)

New features:
- Added real-time process interruption with "Stop Translation" button
- Implemented detailed text display of process phases in real-time
- Enhanced error handling for file permissions and language codes
- Improved user interface with better feedback during translation

Technical improvements:
- Added threading support for background processing while keeping UI responsive
- Implemented session state management for process control
- Added stop_callback parameter to VideoTranslator for safe interruption
- Enhanced error handling with try-except blocks for file operations
- Fixed language code mapping to prevent "Unsupported language" errors
- Updated copyright information and application title

0.3.2 (March 3, 2023)

New features:
- Added Streamlit-based graphical user interface for easier use
- Improved user experience with progress indicators and status updates
- Added custom styling and visual enhancements to the interface
- Created convenience scripts for launching the Streamlit interface

Technical improvements:
- Added streamlit dependency to requirements.txt
- Created modular app.py file for the Streamlit interface
- Added custom CSS styling for better visual appearance
- Implemented progress tracking during video processing
- Created comprehensive documentation for the Streamlit interface

0.3.1 (March 1, 2025)

Bug fixes and improvements to voice cloning and cache management:
- Fixed issue with voice cloning when using --no-cache option
- Improved messaging for voice conditioning latents generation
- Enhanced cache management for voice samples
- Ensured direct use of voice samples when cache is disabled
- Updated documentation for cache management options

Technical improvements:
- Modified clone_voice function to properly handle use_cache parameter
- Updated generate_audio_segments to pass use_cache parameter
- Fixed misleading messages about voice conditioning latents
- Ensured voice samples are used directly when cache is disabled
- Added clear documentation about cache management options

0.3.0 (March 1, 2025)

Major improvements to synchronization and usability:
- Improved synchronization algorithm with better natural pause detection
- Fixed synchronization score calculation for more accurate metrics
- Added Jupyter notebook support for Google Colab integration
- Renamed main script to autodub.py for better clarity
- Enhanced visualization tools for synchronization debugging
- Added comprehensive synchronization metrics analysis

New features:
- Added autodub.ipynb Jupyter notebook for easy usage in Google Colab
- Implemented improved DTW-based synchronization evaluation
- Added support for custom synchronization configurations
- Enhanced segment positioning based on natural pauses
- Added visualization of synchronization quality metrics

Technical improvements:
- Fixed bug in synchronization score calculation
- Enhanced audio_processing.py with improved pause detection
- Updated sync_evaluation.py with more accurate metrics
- Improved segment positioning algorithm
- Added support for advanced synchronization parameters
- Optimized voice cloning process with CLVP
- Renamed main.py to autodub.py for better clarity and usability

0.2.1 (March 1, 2025)

Enhanced audio synchronization system:
- Added advanced synchronization algorithms for better alignment between original and translated audio
- Implemented natural pause detection for improved segment placement
- Created adaptive speed adjustment based on linguistic properties
- Added language-specific timing parameters for more natural-sounding translations
- Developed synchronization quality evaluation metrics
- Implemented visualization tools for synchronization debugging

New features:
- Added command-line options for fine-tuning synchronization parameters
- Support for JSON configuration files for synchronization settings
- Language-specific properties database for optimized translations
- Intelligent segment splitting based on linguistic boundaries
- Visualization of synchronization quality for debugging

Technical improvements:
- Added new sync_evaluation.py module for measuring synchronization quality
- Enhanced utils.py with language-specific properties
- Updated voice_synthesis.py with adaptive speed algorithms
- Improved translation.py with intelligent segment alignment
- Enhanced audio_processing.py with natural pause detection
- Updated autodub.py (formerly main.py) to support new synchronization options

0.2.0 (March 1, 2025)

Complete code restructuring into a modular architecture:
- Split monolithic file into specialized modules
- Created autodub.py (formerly main.py) as the main entry point
- Separated logic into video_translator.py, speech_recognition.py, translation.py, voice_synthesis.py, audio_processing.py, and utils.py
- Added __init__.py to make the project a Python package

Maintainability improvements:
- Each module has a specific and well-defined responsibility
- Reduced complexity of individual files
- Improved code readability

Documentation improvements:
- Updated README.md with the new modular structure
- Detailed documentation for each module and function
- Added explanatory docstrings for all main functions

Development tools:
- Added requirements.txt to manage dependencies
- Created test_import.py to verify module integrity
- Added run_original.py for comparison with the previous version

No functional changes:
- Maintained full compatibility with the previous version
- Preserved the existing cache system
- Same audio/video processing capabilities

TODO:
- Implement Lip Sync functionality to match translated audio with video mouth movements
- Add support for more languages and voice models
- Create a graphical user interface for easier usage
- Implement batch processing for multiple videos
- Add support for subtitle generation and embedding

---

# Version History

## 0.5.x Series

### 0.5.1 (March 5, 2025)
Bug fixes for language code handling, file permissions, and dependency compatibility.

### 0.5.0 (March 3, 2025)
Added real-time process interruption, detailed text display of process phases, and enhanced error handling.

## 0.3.x Series

### 0.3.0 (March 1, 2025)
Major improvements to synchronization metrics, Jupyter notebook support, and renamed main script to autodub.py.

### 0.3.1 (March 1, 2025)
Bug fixes and improvements to voice cloning and cache management.

### 0.3.2 (March 3, 2023)
New features:
- Added Streamlit-based graphical user interface for easier use
- Improved user experience with progress indicators and status updates
- Added custom styling and visual enhancements to the interface
- Created convenience scripts for launching the Streamlit interface

Technical improvements:
- Added streamlit dependency to requirements.txt
- Created modular app.py file for the Streamlit interface
- Added custom CSS styling for better visual appearance
- Implemented progress tracking during video processing
- Created comprehensive documentation for the Streamlit interface

## 0.2.x Series

### 0.2.1 (March 1, 2025)
Enhanced audio synchronization system with advanced algorithms and language-specific optimizations.

### 0.2.0 (March 1, 2025)
Complete code restructuring into a modular architecture.

## 0.1.x Series

### 0.1.0a (February 28, 2025)

Initial release of the video translation and voice cloning tool.

Features:
- Implementation of Whisper for speech recognition
- Use of MBart for multilingual translation
- Integration of Tortoise-TTS for voice synthesis with voice cloning
- Automatic speech synchronization with video timing
- Advanced cache management to optimize processing times
- AI vocal separation with Demucs for cleaner dubbing
- Support for multiple languages for multilingual localization
- Modular structure to facilitate future improvements
